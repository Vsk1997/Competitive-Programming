Problem Link: https://leetcode.com/explore/challenge/card/30-day-leetcoding-challenge/528/week-1/3285/

Tip: Solve using kadane's algorithm in O(n).

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int meh=0, msf=INT_MIN;
        for(int i = 0; i < nums.size() ; i++)
        {
           meh=meh+nums[i];
            if(meh<nums[i])
            {
                meh=nums[i];
            }
            if(msf<meh)
            {
                msf=meh;
            }
            
        }
        
        return msf;
        
    }
};
